import s from "./Catalog.module.sass";
import { useState, useEffect } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import axios from "../../axios";

export default function Catalog() {
  const [isSortOpen, setIsSortOpen] = useState(false);
  const [activeSort, setActiveSort] = useState("По кол. подписчиков");
  const [search, setSearch] = useState("");
  const [channels, setChannels] = useState([]);
  const location = useLocation();
  const passedCategory = location.state?.category || "новости"; // по умолчанию

  const navigate = useNavigate();

  useEffect(() => {
    axios
      .get(`/api/channels?category=${encodeURIComponent(passedCategory)}`)
      .then((res) => {
        setChannels(res.data);
        console.log(res.data);
      })
      .catch((err) => {
        console.error("Ошибка при запросе:", err);
      });
  }, [passedCategory]);

  const filtered = channels.filter((ch) =>
    ch.title.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <div className={s.container}>
      <div className={s.header}>
        {/* SVG и заголовок */}
        <svg
          width="20"
          height="20"
          viewBox="0 0 20 20"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clip-path="url(#clip0_63_6098)">
            <path
              d="M15.186 5.86358L14.5827 4.87388L14.1438 5.94667C13.75 6.90951 13.1857 7.4617 12.5958 7.46173C11.4721 7.46177 10.9513 6.03378 10.8176 5.12069C10.6253 3.80597 10.9702 2.45838 11.5431 1.2788C11.5432 1.27868 12.1642 0 12.1642 0L10.8226 0.470153C8.42631 1.30988 6.41805 2.94942 5.0149 5.21151C3.64637 7.41785 2.92601 10.0939 2.93167 12.9493C2.93167 15.1189 3.70029 16.9471 5.15437 18.2363C6.43719 19.3736 8.15775 20 9.99912 20C11.8405 20 13.5611 19.3736 14.8439 18.2363C16.2979 16.9471 17.0666 15.1189 17.0666 12.9493C17.0666 10.1076 16.5218 8.05477 15.186 5.86358Z"
              fill="#FF4F19"
            />
            <path
              d="M5.0149 5.21148C3.64637 7.41781 2.92601 10.0939 2.93167 12.9493C2.93167 15.1189 3.70029 16.9471 5.15437 18.2363C6.43719 19.3736 8.15775 20 9.99912 20V0.797363C7.96549 1.7019 6.2541 3.21369 5.0149 5.21148Z"
              fill="#FF7800"
            />
            <path
              d="M13.0395 11.7148L12.6859 11.1348L12.4287 11.7635C12.1979 12.3278 11.8672 12.6515 11.5215 12.6515C10.8628 12.6515 10.5576 11.8146 10.4793 11.2794C10.3666 10.5089 10.5687 9.71904 10.9045 9.02769C10.9045 9.02761 11.2685 8.2782 11.2685 8.2782L10.4822 8.55375C9.07776 9.04588 7.90072 10.0068 7.07837 11.3326C6.27629 12.6257 5.85408 14.1942 5.85744 15.8677C5.85744 17.1393 6.30792 18.2108 7.16013 18.9663C7.91197 19.6329 8.92041 20 9.9996 20C11.0788 20 12.0872 19.6329 12.8391 18.9663C13.6913 18.2108 14.1418 17.1393 14.1418 15.8677C14.1417 14.2022 13.8224 12.999 13.0395 11.7148Z"
              fill="#FF7800"
            />
            <path
              d="M7.07837 11.3326C6.27629 12.6257 5.85408 14.1941 5.85744 15.8676C5.85744 17.1392 6.30792 18.2107 7.16013 18.9663C7.91197 19.6329 8.92037 20 9.9996 20V8.74548C8.80772 9.27561 7.80467 10.1617 7.07837 11.3326Z"
              fill="#FF9900"
            />
          </g>
          <defs>
            <clipPath id="clip0_63_6098">
              <rect width="20" height="20" fill="white" />
            </clipPath>
          </defs>
        </svg>
        <p className={s.title}>Подборка недели</p>
      </div>
      <div className={s.main}>
        <div className={s.mainHeader}>
          <p className={s.mainHeaderTitle}>{passedCategory}</p>
        </div>
        <div className={s.controls}>
          <div className={s.searchContainer}>
            <input
              className={s.searchInput}
              type="text"
              placeholder="Поиск"
              value={search}
              onChange={(e) => setSearch(e.target.value)}
            />
          </div>
          <div className={s.containers}>
            <div
              className={s.sortContainer}
              onClick={() => setIsSortOpen(!isSortOpen)}
            >
              {/* SVG */}
              <svg
                width="18"
                height="18"
                viewBox="0 0 18 18"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M4.35423 3.75C4.76844 3.75 5.10423 4.08579 5.10423 4.5V11.7802L6.80715 10.1992C7.1107 9.91733 7.58525 9.93494 7.86708 10.2385C8.14891 10.542 8.1313 11.0166 7.82775 11.2984L4.86453 14.0496C4.57282 14.3205 4.12033 14.3162 3.83374 14.04L0.979506 11.2888C0.68128 11.0013 0.672553 10.5265 0.960015 10.2283C1.24748 9.93007 1.72227 9.92135 2.0205 10.2088L3.60423 11.7354V4.5C3.60423 4.08579 3.94002 3.75 4.35423 3.75ZM9.3311 4.97049C9.3311 4.55628 9.66689 4.22049 10.0811 4.22049H16.5C16.9142 4.22049 17.25 4.55628 17.25 4.97049C17.25 5.3847 16.9142 5.72049 16.5 5.72049H10.0811C9.66689 5.72049 9.3311 5.3847 9.3311 4.97049ZM9.3311 8.58157C9.3311 8.16736 9.66689 7.83157 10.0811 7.83157H14.666C15.0802 7.83157 15.416 8.16736 15.416 8.58157C15.416 8.99579 15.0802 9.33157 14.666 9.33157H10.0811C9.66689 9.33157 9.3311 8.99579 9.3311 8.58157ZM9.3311 12.1927C9.3311 11.7784 9.66689 11.4427 10.0811 11.4427H12.8321C13.2463 11.4427 13.5821 11.7784 13.5821 12.1927C13.5821 12.6069 13.2463 12.9427 12.8321 12.9427H10.0811C9.66689 12.9427 9.3311 12.6069 9.3311 12.1927Z"
                  fill="url(#paint0_linear_64_5418)"
                />
                <defs>
                  <linearGradient
                    id="paint0_linear_64_5418"
                    x1="-1.26094"
                    y1="9"
                    x2="21.0656"
                    y2="9"
                    gradientUnits="userSpaceOnUse"
                  >
                    <stop stop-color="#F29D4E" />
                    <stop offset="0.427885" stop-color="#E0524E" />
                    <stop offset="1" stop-color="#AF407A" />
                  </linearGradient>
                </defs>
              </svg>
              <p className={s.sortText}>{activeSort}</p>
              {isSortOpen && (
                <div className={s.sortDropdown}>
                  <div
                    className={`${s.sortOption} ${
                      activeSort === "По кол. подписчиков" ? s.active : ""
                    }`}
                    onClick={() => {
                      setActiveSort("По кол. подписчиков");
                      setIsSortOpen(false);
                    }}
                  >
                    <span>По кол. подписчиков</span>
                  </div>
                  <div
                    className={`${s.sortOption} ${
                      activeSort === "По алфавитному порядку" ? s.active : ""
                    }`}
                    onClick={() => {
                      setActiveSort("По алф. порядку");
                      setIsSortOpen(false);
                    }}
                  >
                    <span>По алфавитному порядку</span>
                  </div>
                </div>
              )}
            </div>
            <div
              className={s.filterContainer}
              onClick={() => navigate("/filter")}
            >
              {/* SVG */}
              <svg
                width="18"
                height="18"
                viewBox="0 0 18 18"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M2.25 5.25C2.25 4.83579 2.58579 4.5 3 4.5H15C15.4142 4.5 15.75 4.83579 15.75 5.25C15.75 5.66421 15.4142 6 15 6H3C2.58579 6 2.25 5.66421 2.25 5.25ZM4.09615 9C4.09615 8.58579 4.43194 8.25 4.84615 8.25H13.1538C13.5681 8.25 13.9038 8.58579 13.9038 9C13.9038 9.41421 13.5681 9.75 13.1538 9.75H4.84615C4.43194 9.75 4.09615 9.41421 4.09615 9ZM6.86538 12.75C6.86538 12.3358 7.20117 12 7.61538 12H10.3846C10.7988 12 11.1346 12.3358 11.1346 12.75C11.1346 13.1642 10.7988 13.5 10.3846 13.5H7.61538C7.20117 13.5 6.86538 13.1642 6.86538 12.75Z"
                  fill="url(#paint0_linear_64_5253)"
                />
                <defs>
                  <linearGradient
                    id="paint0_linear_64_5253"
                    x1="0.604688"
                    y1="9"
                    x2="18.8719"
                    y2="9"
                    gradientUnits="userSpaceOnUse"
                  >
                    <stop stop-color="#F29D4E" />
                    <stop offset="0.427885" stop-color="#E0524E" />
                    <stop offset="1" stop-color="#AF407A" />
                  </linearGradient>
                </defs>
              </svg>
              <p className={s.filterText}>Фильтры</p>
            </div>
          </div>
        </div>

        <div className={s.cards}>
          {filtered.length === 0 ? (
            <div style={{ color: "#fff", textAlign: "center" }}>
              Ничего не найдено
            </div>
          ) : (
            filtered.map((ch, index) => (
              <div
                key={index}
                className={s.card}
                onClick={() => navigate("/channel")}
              >
                <img
                  src={ch.avatar || "/images/placeholder.jpg"}
                  alt={ch.title}
                  className={s.avatar}
                />
                <div className={s.content}>
                  <div className={s.title}>{ch.title}</div>
                  <div className={s.description}>
                    {ch.description || "Описание канала отсутствует"}
                  </div>
                  <div className={s.meta}>
                    <div className={s.metaItem}>
                      <svg
                        width="16"
                        height="16"
                        viewBox="0 0 16 16"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          fill-rule="evenodd"
                          clip-rule="evenodd"
                          d="M5.27481 4.24094C5.13012 4.38166 5.01376 4.60825 5.01376 4.95298C5.01376 5.64349 5.46623 6.02054 5.92756 6.02054C6.38889 6.02054 6.84136 5.64349 6.84136 4.95298C6.84136 4.60825 6.725 4.38166 6.58031 4.24094C6.43152 4.09622 6.20905 4.00008 5.92756 4.00008C5.64607 4.00008 5.42361 4.09622 5.27481 4.24094ZM4.34519 3.28512C4.76841 2.8735 5.33618 2.66675 5.92756 2.66675C6.51894 2.66675 7.08671 2.8735 7.50993 3.28512C7.93726 3.70074 8.1747 4.28394 8.1747 4.95298C8.1747 6.29006 7.21197 7.35388 5.92756 7.35388C4.64315 7.35388 3.68042 6.29006 3.68042 4.95298C3.68042 4.28394 3.91786 3.70074 4.34519 3.28512ZM8.94646 5.07341C8.94646 4.08954 9.74387 3.29164 10.7279 3.29164C11.712 3.29164 12.5094 4.08954 12.5094 5.07341C12.5094 6.05728 11.712 6.85518 10.7279 6.85518C9.74387 6.85518 8.94646 6.05728 8.94646 5.07341ZM10.7279 4.62497C10.4806 4.62497 10.2798 4.82557 10.2798 5.07341C10.2798 5.32125 10.4806 5.52185 10.7279 5.52185C10.9752 5.52185 11.176 5.32125 11.176 5.07341C11.176 4.82557 10.9752 4.62497 10.7279 4.62497ZM10.6765 8.255C10.6765 7.88681 10.975 7.58833 11.3431 7.58833C12.1963 7.58833 12.9975 7.82866 13.6032 8.25151C14.2067 8.67281 14.6663 9.31929 14.6663 10.1095C14.6663 10.6913 14.4713 11.2559 14.0422 11.7061C13.619 12.1501 13.0157 12.4338 12.2792 12.5575C11.9161 12.6185 11.5723 12.3736 11.5113 12.0105C11.4504 11.6474 11.6953 11.3036 12.0584 11.2426C12.5896 11.1534 12.9017 10.9701 13.0771 10.7862C13.2464 10.6085 13.333 10.3843 13.333 10.1095C13.333 9.87545 13.198 9.5947 12.84 9.34481C12.4843 9.09647 11.9571 8.92166 11.3431 8.92166C10.975 8.92166 10.6765 8.62319 10.6765 8.255ZM3.46132 10.0471C2.78726 10.3634 2.66634 10.6682 2.66634 10.7787C2.66634 10.9871 2.76928 11.2626 3.26802 11.5226C3.78882 11.7941 4.67277 12.0001 6.0231 12.0001C7.37342 12.0001 8.25737 11.7941 8.77817 11.5226C9.27692 11.2626 9.37985 10.9871 9.37985 10.7787C9.37985 10.6682 9.25893 10.3634 8.58487 10.0471C7.96371 9.75561 7.05871 9.55724 6.0231 9.55724C4.98749 9.55724 4.08249 9.75561 3.46132 10.0471ZM2.89489 8.84007C3.72992 8.44821 4.83663 8.22391 6.0231 8.22391C7.20956 8.22391 8.31627 8.44821 9.1513 8.84007C9.93344 9.2071 10.7132 9.84638 10.7132 10.7787C10.7132 11.613 10.2065 12.2816 9.3946 12.7049C8.60474 13.1167 7.47698 13.3334 6.0231 13.3334C4.56922 13.3334 3.44146 13.1167 2.6516 12.7049C1.83968 12.2816 1.33301 11.613 1.33301 10.7787C1.33301 9.84638 2.11276 9.2071 2.89489 8.84007Z"
                          fill="#7C7C7C"
                        />
                      </svg>
                      {ch.subscribers?.toLocaleString() ?? "?"}
                    </div>
                    <div className={s.metaItem}>
                      <svg
                        width="16"
                        height="16"
                        viewBox="0 0 16 16"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          fill-rule="evenodd"
                          clip-rule="evenodd"
                          d="M7.85333 2.66659C4.98864 2.66659 2.66634 4.98888 2.66634 7.85357C2.66634 8.38557 2.74643 8.89885 2.89521 9.38203H4.4387C4.74403 9.38203 4.99154 9.13451 4.99154 8.82919V7.24382C4.99154 6.20211 5.83602 5.35764 6.87772 5.35764H8.09723C8.40256 5.35764 8.65008 5.11012 8.65008 4.8048V2.73163C8.65008 2.73022 8.65009 2.72881 8.65009 2.7274C8.39034 2.68736 8.12425 2.66659 7.85333 2.66659ZM9.98341 3.12271C11.1967 3.6698 12.1622 4.66999 12.6635 5.9086C12.8017 6.24989 13.1903 6.41456 13.5316 6.27641C13.8729 6.13826 14.0376 5.7496 13.8994 5.40831C12.9327 3.01998 10.5908 1.33325 7.85333 1.33325C4.25226 1.33325 1.33301 4.2525 1.33301 7.85357C1.33301 11.4547 4.25226 14.3739 7.85333 14.3739C8.22152 14.3739 8.52 14.0754 8.52 13.7072C8.52 13.339 8.22152 13.0406 7.85333 13.0406C6.04638 13.0406 4.45523 12.1166 3.52657 10.7154H4.4387C5.48041 10.7154 6.32488 9.87089 6.32488 8.82919V7.24382C6.32488 6.93849 6.57239 6.69098 6.87772 6.69098H8.09723C9.13894 6.69098 9.98341 5.8465 9.98341 4.8048V3.12271ZM11.6582 8.52024C10.7194 8.52024 9.98342 9.26102 9.98342 10.1441C9.98342 10.3672 10.0733 10.6663 10.2689 11.0278C10.4597 11.3803 10.7225 11.7401 10.9989 12.0706C11.2314 12.3486 11.4653 12.5961 11.6582 12.7893C11.8511 12.5961 12.085 12.3486 12.3176 12.0706C12.594 11.7401 12.8567 11.3803 13.0475 11.0278C13.2431 10.6663 13.333 10.3672 13.333 10.1441C13.333 9.26102 12.5971 8.52024 11.6582 8.52024ZM11.6582 13.7072C11.2208 14.2103 11.2207 14.2102 11.2205 14.2101L11.2196 14.2093L11.2176 14.2075L11.2111 14.2018L11.1883 14.1817C11.169 14.1645 11.1416 14.1398 11.1073 14.1083C11.0385 14.0454 10.9417 13.9549 10.8262 13.8418C10.5958 13.6165 10.2869 13.2977 9.9761 12.926C9.66712 12.5566 9.34454 12.1211 9.09629 11.6624C8.85287 11.2126 8.65008 10.6846 8.65008 10.1441C8.65008 8.49717 10.0108 7.18691 11.6582 7.18691C13.3057 7.18691 14.6663 8.49717 14.6663 10.1441C14.6663 10.6846 14.4636 11.2126 14.2201 11.6624C13.9719 12.1211 13.6493 12.5566 13.3403 12.926C13.0295 13.2977 12.7206 13.6165 12.4903 13.8418C12.3747 13.9549 12.2779 14.0454 12.2092 14.1083C12.1748 14.1398 12.1474 14.1645 12.1281 14.1817L12.1054 14.2018L12.0988 14.2075L12.0968 14.2093L12.0961 14.2099C12.096 14.21 12.0957 14.2103 11.6582 13.7072ZM11.6582 13.7072L12.0961 14.2099C11.8453 14.428 11.4714 14.4282 11.2205 14.2101L11.6582 13.7072ZM11.6582 9.48436C12.0264 9.48436 12.3249 9.78283 12.3249 10.151V10.195C12.3249 10.5632 12.0264 10.8617 11.6582 10.8617C11.29 10.8617 10.9915 10.5632 10.9915 10.195V10.151C10.9915 9.78283 11.29 9.48436 11.6582 9.48436Z"
                          fill="#7C7C7C"
                        />
                      </svg>
                      Россия
                    </div>
                  </div>
                </div>
              </div>
            ))
          )}
        </div>
      </div>
    </div>
  );
}
